<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Celic">
    <!--Base Styles In InputBox-->
    <Style x:Key="txtBlockDefaultStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="2"/>
    </Style>
    <!--Стандартный стиль для TextBlock во всплывающей подсказке-->
    <Style x:Key="txtBlockToolTipStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource txtBlockDefaultStyle}">
        <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
        <Setter Property="MinHeight" Value="20"/>
    </Style>
    <!--Стандартный стиль для TextBox в вводе данных-->
    <Style x:Key="txtBoxBaseStyle" TargetType="{x:Type TextBox}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="0,-2,0,0"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="MaxHeight" Value="20"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="MaxWidth" Value="200"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>
    <!--Стандартный стиль TextBlock в вводе данных-->
    <Style x:Key="txtBlockBaseStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="0,2,2,0"/>
        <Setter Property="MaxWidth" Value="400"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="TextAlignment" Value="Right"/>
        <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
    </Style>

    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="20"/>
    </Style>

    <Style x:Key="PathStyle" TargetType="{x:Type Path}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Fill" Value="Black"/>
    </Style>

    <Style x:Key="HeaderStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
    </Style>

    <Style x:Key="BasePositionStyle" TargetType="{x:Type ContentPresenter}">
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <!--Стандартный стиль значения величины  TextBlock в выводе данных-->
    <Style x:Key="txtBlockValueStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource txtBlockBaseStyle}">
        <Setter Property="MaxHeight" Value="20"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="Margin" Value="10,0,0,0"/>
    </Style>
    <!--Стандартный стиль наименования величины TextBlock в выводе данных-->
    <Style x:Key="txtBlockNameStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource txtBlockToolTipStyle}">
        <Setter Property="TextAlignment" Value="Right"/>
    </Style>
    <!--ClearableTextBox Style-->
    <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
    <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
    <Style TargetType="{x:Type local:ClearableTextBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ClearableTextBox}">
                    <Border x:Name="border" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Focusable="false"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden"/>
                            <Button x:Name="PART_Button"
                                    Content="X"
                                    Width="18" 
                                    Height="18"
                                    HorizontalAlignment="Right"
                                    Margin="0,-1,-1,0"
                                    Visibility="Collapsed"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="border" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Button" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--InputDataField Style-->
    <!--Стандартная разметка Control-->
    <!--<Style TargetType="{x:Type local:InputDataField}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:InputDataField}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    <!--Предыдущая разметка Control-->
    <!--<Style TargetType="{x:Type local:InputDataField}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true"
                            Width="316.8">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <local:ClearableTextBox Width="100" Margin="10,2,4,2"
                                                    Background="Red"
                                                    x:Name="PART_ClearableTextBox"
                                                    HorizontalAlignment="Right"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    
</ResourceDictionary>
